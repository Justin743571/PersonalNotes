body {
  margin: 10px;
  height: 200vh;
}
.boxes {
  border: 3px solid lightgrey;
  position: relative;
}
.box {
  width: 5rem;
  height: 5rem;
}
/*绝对定位*/
.box-one {
  /*如果我们选择绝对定位absolute，可以将元素相对于容器去定位，
      为了实现这个效果，我们必须要将容器相对定位在.boxes中定义相对定位
      它就成为一个独立的盒子，与父级元素没有关系了*/
  background-color: gold;
  position: absolute;
  right: 0;
  bottom: 0;
}
/*相对定位 */ /*使用相对定位，元素可以相对自己原本的位置定位，其他元素不受影响*/
.box-two {
  background-color: aquamarine;
  /*运用位置属性position (relative) 使用相对定位时，我们可以相对于元素本来的位置移动它*/
  position: relative;
  /*left: 5rem 这里需要注意的是，移动是相对于元素的初始位置进行的，而不是相对于页面的左侧。*/
  /*如果你希望 .box-two 元素在页面上实际向左移动，而不管文档流方向如何，
    可以使用负值，如 left: -5rem;。这将使元素相对于其初始位置向左移动5个 "rem" 单位，
    而不考虑文档流方向。文档流决定了元素在页面上的位置以及它们之间的相互关系。*/
  left: 4rem;
  /*right: 4rem;
    left: 4rem;同时应用它们可能会导致相互抵消，结果与只应用其中一个属性时相似。*/
  /*z-index改变图像覆盖*/
  z-index: 999;
}
/*固定定位 它相对于浏览器定位*/
/*position: fixed;：这表示元素采用固定定位，它相对于浏览器窗口定位，而不是相对于文档流中的其他元素。
  top: 0;：这表示元素的顶部边缘将与浏览器窗口的顶部边缘对齐。
  具体来说，top: 0; 将 .box-three 元素的顶部边缘与浏览器窗口的顶部边缘重合，
  使该元素紧贴着浏览器窗口的顶部。*/
.box-three {
  background-color: red;
  position: fixed;
  /*这里的top和bottom有点迷惑*/
  top: 0;
  left: 2rem;
}
