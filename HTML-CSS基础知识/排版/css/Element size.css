*,
*::after,
*::befor {
  /* 这个 *{} 代表全局选择器 这样我们把下面这段代码写进去，
    后面我们就不用去定义其他东西再次去写一遍了
    但是它不适用于伪元素，所以我们需要扩展这个规则在上面加(*::after,*::befor)
    还有对块级元素没有用，因为它是要占用一行 */
  box-sizing: border-box;
}

.box {
  width: 100px;
  height: 100px;
  background-color: gold;
  padding: 20px;
  border: 10px;
  /*box-sizing: border-box; 的作用是改变尺寸计算方式
  无论你添加多少内边距和边框，元素的总宽度和高度都会保持不变。
  这对于创建可预测和一致的布局非常有用，特别是在响应式设计中，
  因为你可以更容易地管理元素的尺寸，而不必担心内边距和边框导致的尺寸变化。*/
  /*box-sizing: border-box;*/

  /*display: inline-block这段代码表示由于行内元素没有宽高
  所以需要通过这行代码可以让他设置宽高*/
  display: inline-block;
}
.box::before {
  content: "HTML";
}
